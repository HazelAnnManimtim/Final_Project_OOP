/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package patient_info;

import java.sql.*;
import java.util.logging.Level;
import javax.swing.JOptionPane;

import java.util.ArrayList;
import java.util.logging.Logger;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Shanel Manimtim
 */
public class patient_info extends javax.swing.JFrame {
    
    
    

    
    private static final String username = "root";
    private static final String password = "ejay17";
    private static final String URL  = "jdbc:mysql://localhost:3306/info";
    
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id, deleteItem;
     
    /**
     * Creates new form patient_info
     */
    public patient_info() {
        initComponents();
      loadDataTable();
    }
    
    public Connection getConnection()
    {
        
         Connection con = null;
         
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/info", "root", "ejay17");
            //JOptionPane.showMessageDialog(null, "Connected");
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
        
        
    }
    
     Connection con;
     
    
    
    public void Connection(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/info","root","ejay17");
            } catch (SQLException ex) {
                Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jbtnPrint = new javax.swing.JButton();
        jbtnPrescription = new javax.swing.JButton();
        jbtnInsert = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        txtfname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        txtaddress = new javax.swing.JTextField();
        txtphonenumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtpatientid = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 8));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel1.setText("DENTAL CLINIC OF BALAYAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(332, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(295, 295, 295))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(21, 21, 21))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1390, -1));

        jPanel3.setBackground(new java.awt.Color(153, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 8));

        area.setEditable(false);
        area.setColumns(20);
        area.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        area.setRows(5);
        jScrollPane2.setViewportView(area);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 123, 310, 460));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Pid", "First Name", "Last Name", "Address", "Price", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, 1390, 259));

        jPanel4.setBackground(new java.awt.Color(153, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 8));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("PATIENT INFORMATION");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 1090, 90));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("First Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Last Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Address");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 410, 80, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Price");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 480, 50, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Phone Number");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 540, 140, 30));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 8));

        jbtnPrint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnPrint.setText("PRINT");
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });

        jbtnPrescription.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnPrescription.setText("PRESCRIPTION");
        jbtnPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrescriptionActionPerformed(evt);
            }
        });

        jbtnInsert.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnInsert.setText("INSERT");
        jbtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertActionPerformed(evt);
            }
        });

        jbtnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnDelete.setText("DELETE");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jbtnExit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnExit.setText("EXIT");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        jbtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnUpdate.setText("UPDATE");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jbtnInsert)
                .addGap(87, 87, 87)
                .addComponent(jbtnUpdate)
                .addGap(126, 126, 126)
                .addComponent(jbtnPrint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(jbtnPrescription)
                .addGap(131, 131, 131)
                .addComponent(jbtnDelete)
                .addGap(130, 130, 130)
                .addComponent(jbtnExit)
                .addGap(78, 78, 78))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPrint)
                    .addComponent(jbtnPrescription)
                    .addComponent(jbtnDelete)
                    .addComponent(jbtnExit)
                    .addComponent(jbtnUpdate))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 1390, 70));

        txtfname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 282, 372, -1));

        txtlname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtlname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 343, 372, -1));

        txtaddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 372, -1));

        txtphonenumber.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtphonenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, 370, -1));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 410, 37, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Patient Id:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 421, -1, -1));

        txtpatientid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtpatientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 410, 90, 50));

        txtprice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, 370, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertActionPerformed
//        // TODO add your handling code here:
            if (checkInputs()) {
            try {
                Connection con = getConnection();
                PreparedStatement ps = con.prepareStatement("INSERT INTO tbl_patient(pid,   FirstName,LastName,Address,Price,PhoneNumber) VALUES(?,?,?,?,?,?)");
                ps.setString(1, txtpatientid.getText());
                ps.setString(2, txtfname.getText());
                ps.setString(3, txtlname.getText());
                ps.setString(4, txtaddress.getText());
                ps.setString(5, txtprice.getText());
                ps.setString(6, txtphonenumber.getText());
                
                ps.executeUpdate();
                loadDataTable();
                
                txtpatientid.setText("");
                txtfname.setText("");
                txtlname.setText("");
                txtaddress.setText("");
                txtprice.setText("");
                txtphonenumber.setText("");
                //show_tbl__patient_In_table_tbl_patient();
                
                JOptionPane.showMessageDialog(null, "Data inserted");
            } catch (SQLException ex) {
                Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            }
    }//GEN-LAST:event_jbtnInsertActionPerformed

    private void jbtnPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrescriptionActionPerformed
        // TODO add your handling code here:
        area.setText("********************************\n");
        area.setText(area.getText()+"*                       Receipt System                       *\n");
        area.setText(area.getText()+"********************************\n");
        
        
        Date obj = new Date();
        
        String Date = obj.toString();
        
        area.setText(area.getText()+"\n"+Date+"\n\n");
        area.setText(area.getText()+"Patient id: "+txtpatientid.getText()+"\n\n");
        area.setText(area.getText()+"FirstName: "+txtfname.getText()+"\n\n");
        area.setText(area.getText()+"LastName: "+txtlname.getText()+"\n\n");
        area.setText(area.getText()+"Address: "+txtaddress.getText()+"\n\n");
        area.setText(area.getText()+"Price: "+txtprice.getText()+"\n\n");
        area.setText(area.getText()+"PhoneNumber: "+txtphonenumber.getText()+"\n\n");

    }//GEN-LAST:event_jbtnPrescriptionActionPerformed

    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
        // TODO add your handling code here:
        try{
            area.print();
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jbtnPrintActionPerformed
private JFrame frame;
    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Exit","MySQL info",
            JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
        
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        // Get the patient ID from the text field
        String patientId = txtpatientid.getText();
        
        // Check if the patient ID is provided
        if (patientId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a Patient ID to delete.");
            return;
        }
        
        // SQL query to delete the patient record
        String sql = "DELETE FROM tbl_patient WHERE Pid = ?";
        
        try {
            Connection con = getConnection();
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, patientId);
            
            // Execute the delete operation
            int rowsAffected = ps.executeUpdate();
            
            // Check if a record was deleted
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "No record found with the given Patient ID.");
            }
            
            // Refresh the data table
            loadDataTable();
            
        } catch (SQLException ex) {
            Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        // Get the patient ID from the text field
        String patientId = txtpatientid.getText();
    
        // Check if the patient ID is provided
        if (patientId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a Patient ID to update.");
            return;
        }
    
        // Start building the SQL query
        StringBuilder sql = new StringBuilder("UPDATE tbl_patient SET ");
        boolean isFirst = true;
    
        // Check each field and append to the SQL statement if it's not empty
        if (!txtfname.getText().isEmpty()) {
            if (!isFirst) sql.append(", ");
            sql.append("FirstName = ?");
            isFirst = false;
        }
        if (!txtlname.getText().isEmpty()) {
            if (!isFirst) sql.append(", ");
            sql.append("LastName = ?");
            isFirst = false;
        }
        if (!txtaddress.getText().isEmpty()) {
            if (!isFirst) sql.append(", ");
            sql.append("Address = ?");
            isFirst = false;
        }
        if (!txtprice.getText().isEmpty()) {
            if (!isFirst) sql.append(", ");
            sql.append("Price = ?");
            isFirst = false;
        }
        if (!txtphonenumber.getText().isEmpty()) {
            if (!isFirst) sql.append(", ");
            sql.append("PhoneNumber = ?");
        }
    
        // Complete the SQL statement with the WHERE clause
        sql.append(" WHERE Pid = ?");
    
        try {
            Connection con = getConnection();
            PreparedStatement ps = con.prepareStatement(sql.toString());
    
            int index = 1; // Index for setting parameters
    
            // Set parameters based on which fields were filled
            if (!txtfname.getText().isEmpty()) {
                ps.setString(index++, txtfname.getText());
            }
            if (!txtlname.getText().isEmpty()) {
                ps.setString(index++, txtlname.getText());
            }
            if (!txtaddress.getText().isEmpty()) {
                ps.setString(index++, txtaddress.getText());
            }
            if (!txtprice.getText().isEmpty()) {
                ps.setString(index++, txtprice.getText());
            }
            if (!txtphonenumber.getText().isEmpty()) {
                ps.setString(index++, txtphonenumber.getText());
            }
    
            // Set the patient ID at the end
            ps.setString(index, patientId);
    
            // Execute the update operation
            int rowsAffected = ps.executeUpdate();
    
            // Check if a record was updated
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data updated successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "No record found with the given Patient ID.");
            }
    
            // Refresh the data table
            loadDataTable();
    
        } catch (SQLException ex) {
            Logger.getLogger(patient_info.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed
    
//private void someActionPerformed(java.awt.event.ActionEvent evt) {                                         
//    // Implementation of the method
//    throw new UnsupportedOperationException("Not supported yet.");
//    
//}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patient_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patient_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patient_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patient_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patient_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnInsert;
    private javax.swing.JButton jbtnPrescription;
    private javax.swing.JButton jbtnPrint;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtpatientid;
    private javax.swing.JTextField txtphonenumber;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables

   
    private boolean checkInputs() {
        return !(txtfname.getText().isEmpty() || txtlname.getText().isEmpty() || 
                 txtaddress.getText().isEmpty() || txtprice.getText().isEmpty() || 
                 txtphonenumber.getText().isEmpty() || txtpatientid.getText().isEmpty());
    }
    
    public void loadDataTable(){
        String sql = "SELECT * FROM tbl_patient";
        
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        try (Connection connection = getConnection();
             Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(sql)){
                 
                  ResultSetMetaData metaData = resultSet.getMetaData();
            int columnCount = metaData.getColumnCount();

             while (resultSet.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    row[i - 1] = resultSet.getObject(i);
                }
                model.addRow(row);
            }

             } catch (SQLException e){
                     
          }
    }

}
